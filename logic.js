var Web3 = require('web3');

const abi = JSON.parse('[{"constant":true,"inputs":[],"name":"_product","outputs":[{"name":"name","type":"string"},{"name":"cost","type":"uint256"},{"name":"ready","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"_suppliers","outputs":[{"name":"name","type":"string"},{"name":"cost","type":"uint256"},{"name":"isVal","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"client_name","type":"string"}],"name":"registerClient","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"_current_ingredients","outputs":[{"name":"","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ingredient","type":"string"},{"name":"cost","type":"uint256"}],"name":"addIngredient","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"_clients","outputs":[{"name":"name","type":"string"},{"name":"isVal","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"supplier_name","type":"string"},{"name":"ingredient","type":"string"}],"name":"registerSupplier","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"_owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_current_ingredients_cost","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"_suppliers_address","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"_ingredients_list","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"productReady","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"product_name","type":"string"},{"name":"product_cost","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]');
const bytecode = '0x606060405234156200001057600080fd5b6040516200137438038062001374833981016040528080518201919060200180519060200190919050506000811115156200004a57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060604051908101604052808381526020018281526020016000151581525060076000820151816000019080519060200190620000c992919062000128565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600060018190555060008060146101000a81548163ffffffff021916908363ffffffff1602179055505050620001d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016b57805160ff19168380011785556200019c565b828001600101855582156200019c579182015b828111156200019b5782518255916020019190600101906200017e565b5b509050620001ab9190620001af565b5090565b620001d491905b80821115620001d0576000816000905550600101620001b6565b5090565b90565b61118d80620001e76000396000f3006060604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632fb958fa146100ca5780633c60f05f146101875780634c6448fe1461026857806351c478cc146102c557806359766698146102fa57806379d8651d14610360578063a6f2ae3a1461043a578063ac7e1e3214610444578063b2bdfa7b146104e4578063b68e491b14610539578063c474e96814610562578063f086cced146105c5578063f907114614610661575b600080fd5b34156100d557600080fd5b6100dd61068e565b6040518080602001848152602001831515151581526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101765780601f1061014b57610100808354040283529160200191610176565b820191906000526020600020905b81548152906001019060200180831161015957829003601f168201915b505094505050505060405180910390f35b341561019257600080fd5b6101be600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106b2565b6040518080602001848152602001831515151581526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156102575780601f1061022c57610100808354040283529160200191610257565b820191906000526020600020905b81548152906001019060200180831161023a57829003601f168201915b505094505050505060405180910390f35b341561027357600080fd5b6102c3600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506106e8565b005b34156102d057600080fd5b6102d86107e4565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561030557600080fd5b61035e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080359060200190919050506107fa565b005b341561036b57600080fd5b610397600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109b0565b60405180806020018315151515815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b5050935050505060405180910390f35b6104426109e0565b005b341561044f57600080fd5b6104e2600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610b2a565b005b34156104ef57600080fd5b6104f7610e30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561054457600080fd5b61054c610e55565b6040518082815260200191505060405180910390f35b341561056d57600080fd5b6105836004808035906020019091905050610e5b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105d057600080fd5b6105e66004808035906020019091905050610e9a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062657808201518184015260208101905061060b565b50505050905090810190601f1680156106535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561066c57600080fd5b610674610f56565b604051808215151515815260200191505060405180910390f35b600780600001908060010154908060020160009054906101000a900460ff16905083565b600660205280600052604060002060009150905080600001908060010154908060020160009054906101000a900460ff16905083565b60001515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16151514151561074a57600080fd5b604080519081016040528082815260200160011515815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107bd929190610f70565b5060208201518160010160006101000a81548160ff02191690831515021790555090505050565b600060149054906101000a900463ffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561085557600080fd5b600760010154816001540110151561086c57600080fd5b60008111151561087b57600080fd5b60006002836040518082805190602001908083835b6020831015156108b55780518252602082019150602081019050602083039250610890565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020541415156108f557600080fd5b6001548101600181905550806002836040518082805190602001908083835b6020831015156109395780518252602082019150602081019050602083039250610914565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081905550600380548060010182816109849190610ff0565b9160005260206000209001600084909190915090805190602001906109aa92919061101c565b50505050565b600560205280600052604060002060009150905080600001908060010160009054906101000a900460ff16905082565b600080600091505b600480549050821015610ac157600482815481101515610a0457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050501515610ab457600080fd5b81806001019250506109e8565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60015434039081150290604051600060405180830381858888f193505050501515610b2657600080fd5b5050565b6000801515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515141515610b8d57600080fd5b60006002836040518082805190602001908083835b602083101515610bc75780518252602082019150602081019050602083039250610ba2565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414151515610c0857600080fd5b600380549050600060149054906101000a900463ffffffff1663ffffffff16101515610c3357600080fd5b6002826040518082805190602001908083835b602083101515610c6b5780518252602082019150602081019050602083039250610c46565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054905060606040519081016040528084815260200182815260200160011515815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610d1b929190610f70565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505060048054806001018281610d5d919061109c565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000601481819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff16021790555050600380549050600060149054906101000a900463ffffffff1663ffffffff161415610e2b576001600760020160006101000a81548160ff0219169083151502179055505b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600481815481101515610e6a57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481101515610ea957fe5b90600052602060002090016000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f4e5780601f10610f2357610100808354040283529160200191610f4e565b820191906000526020600020905b815481529060010190602001808311610f3157829003601f168201915b505050505081565b6000600760020160009054906101000a900460ff16905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610fb157805160ff1916838001178555610fdf565b82800160010185558215610fdf579182015b82811115610fde578251825591602001919060010190610fc3565b5b509050610fec91906110c8565b5090565b8154818355818115116110175781836000526020600020918201910161101691906110ed565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061105d57805160ff191683800117855561108b565b8280016001018555821561108b579182015b8281111561108a57825182559160200191906001019061106f565b5b50905061109891906110c8565b5090565b8154818355818115116110c3578183600052602060002091820191016110c291906110c8565b5b505050565b6110ea91905b808211156110e65760008160009055506001016110ce565b5090565b90565b61111691905b8082111561111257600081816111099190611119565b506001016110f3565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061113f575061115e565b601f01602090049060005260206000209081019061115d91906110c8565b5b505600a165627a7a72305820be23f8cf3f15b271d1cb8ac93d2bb159f5f1ae8397d1dff57852fc00f19bec910029';

var product_name = 'Pizza';

var cost  = 100000;

var address = '0x1C8Db6364eD3a4ED6e0e01C419E7Cad56d309d43';
var gas_price;


const contract =  web3.eth.contract(abi);

var contractInstance;

function deployContract() {
  if ($('#product_name').val() !== '' && $('#product_cost').val() !== 0 ) {
    product_name = $('#product_name').val();
    cost = $('#product_cost').val();

    contractInstance = contract.new(product_name, cost,
      {
        from: web3.eth.coinbase,
        data: bytecode,
        gas: 1000000
      }, function(error, newContract) {
      if (error) {
        $('#msg').html("When deploying contract error has occured: " + error);
      } else {
        $('#msg').html('Deployed.');
        if (!newContract.address) {
          console.log("Tx hash: " + newContract.transactionHash);
        } else {
          console.log("Address: " + newContract.address);
          address = newContract.address;
        }
      }
    });

  } else {
    $('#msg').html('Enter name of product and price!');
    
  }

    // var address;
    // contr.deploy({
    //     data: bytecode,
    //     arguments: [product_name, cost]
    // }).send({
    //     from: web3.eth.coinbase,
    //     gas: 1500000,
    //     gasPrice: '30000000000000'
    // }).then(function(newContract){
    //     address = newContract.options.address;
    //     console.log(address);
    // });

}


function productReady() {
  contractInstance.productReady(function(error, data){
    $('#msg').html('Product ready: ' + data);
  });
}


function addIngredient() {
  var ingredient_name = $('#ingredient_name').val();
  var ingredient_cost = $('#ingredient_cost').val();
  contractInstance.addIngredient(ingredient_name, ingredient_cost, {from: web3.eth.coinbase, gas: 140000}, function(error, data) {
    if (error || data === 'undefined') {
      $('#msg').html('Error occured: ' + error);
    } else {
      $('#msg').html('Ingredient successfully added, tx address: ' + data);
    }
  });
}


function registerClient() {
  var client_name = $('#customer_name').val();
  var client_address = $('#customer_address').val();
  contractInstance.registerClient(client_name, client_address, {from: web3.eth.coinbase, gas: 140000}, function(error, data) {
    if (error || data === 'undefined') {
      $('#msg').html('Error occured: ' + error);
    } else {
      $('#msg').html('Add client, tx address: ' + data);
    }
  }); 
}

function registerSupplier() {
  var supplier_name = $('#supplier_name').val();
  var supplier_ingredient = $('#supplier_ingredient').val();
  contractInstance.registerSupplier(supplier_name, supplier_ingredient, {from: web3.eth.coinbase, gas: 140000}, function(error, data) {
    if (error || data === 'undefined') {
      $('#msg').html('Error occured: ' + error);
    } else {
      $('#msg').html('Add client, tx address: ' + data);
    }
  }); 
}


function buy() {
  var price;
  contractInstance._product(function(e, product) {
    contractInstance.buy({from: web3.eth.coinbase, gas: 140000, value: product[1]}, function(error, data) {
      if (error || data === 'undefined') {
        $('#msg').html('Error occured: ' + error);
      } else {
        $('#msg').html('Add client, tx address: ' + data);
      }
    }); 
  });
  
}




window.addEventListener('load', function() {
  if (typeof web3 !== 'undefined') {
    console.warn("Using web3 detected from external source like Metamask")
    // Use Mist/MetaMask's provider
    window.web3 = new Web3(web3.currentProvider);
  } else {
    console.warn("No web3 detected. Falling back to http://localhost:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask");
    // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
    window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
  }

  // var web3 = new Web3(Web3.givenProvider || 'http://localhost:8546');
  contractInstance = contract.at(address);


  web3.eth.estimateGas({data: bytecode}, function (error, data) {
    console.log("Estimated gas: " + data);
    gas_price = data;
  });

  console.log("GaS: " + gas_price);

  contractInstance._product(function(error, data) {
    $('#product-name').html(data[0]);
    $('#product-price').html(web3.fromWei(data[1], 'ether') + " ether ");
    $('#product-status').html((data[2] ? 'ready': 'not ready'));

  });

  contractInstance.productReady(function(error, data) {
    $('#msg').html('Status of product: ' + (data ? 'ready': 'not ready'));
  });

  

});

// $(document).on('change')
